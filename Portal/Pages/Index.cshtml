@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}



<div>
    <div class="row">
        <div class="col-6">
            <div class="card">
                <div class="card-header">Save / Update Token</div>
                <form class="card-body" id="tokenForm">
                    <div class="row mb-2">
                        <label for="inputName" class="col-sm-3 col-form-label">Name</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputName">
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <label for="inputSymbol" class="col-sm-3 col-form-label">Symbol</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputSymbol">
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <label for="inputContractAddress" class="col-sm-3 col-form-label">Contract Address</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputContractAddress">
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <label for="inputTotalSupply" class="col-sm-3 col-form-label">TotalSupply</label>
                        <div class="col-sm-9">
                            <input type="number" class="form-control" id="inputTotalSupply">
                        </div>
                    </div>
                    
                    <div class="row mb-2">
                        <label for="inputTotalHolders" class="col-sm-3 col-form-label">Total Holders</label>
                        <div class="col-sm-9">
                            <input type="number" class="form-control" id="inputTotalHolders">
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button id="btnResetTokenForm" type="button" class="btn btn-warning">Reset</button>
                </form>
            </div>

        </div>
        <div class="col-6">
            <div class="card">
                <div class="card-header">Token Statistics by Token Supply</div>
                <div  class="card-body" style="height: 300px">
                    <div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;">
                        <div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;">
                            <div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div>
                        </div>
                        <div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;">
                            <div style="position:absolute;width:200%;height:200%;left:0; top:0"></div>
                        </div>
                    </div> 
                    <div id="chartLocation">

                    </div>
                </div>
            </div>

        </div>
    </div>
    
    <div class="row">
        <div class="col-12 card">
            <div class="card-body">
                <section id="processes" class="center">
                    <a class="btn btn-info" href="http://localhost:5262/Token/Download">Export to excel</a>
                    <table class="table">
                        <thead>
                        <tr>
                            <th scope="col">Rank</th>
                            <th scope="col">Symbol</th>
                            <th scope="col">Name</th>
                            <th scope="col">Contract Address</th>
                            <th scope="col">Total Holders</th>
                            <th scope="col">Total Supply</th>
                            <th scope="col">Total Supply %</th>
                            <th scope="col">Handle</th>
                        </tr>
                        </thead>
                        <tbody id="dataTbBody">
                        </tbody>
                    </table>


                    <nav aria-label="TablePaginate">
                        <ul id="paginateId" class="pagination">
                            <li class="page-item"><a class="page-link" href="#">1</a></li>
                            <li class="page-item active"><span class="page-link">2</span></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                        </ul>
                    </nav>


                </section>
            </div>

        </div>
    </div>
</div>


<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Modal</h5>
                <button type="button" class="close modalCloseBtn" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="card-body" id="tokenEditForm">
                    <div class="row mb-2">
                        <label for="inputName" class="col-sm-3 col-form-label">Name</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputEditName">
                        </div>
                    </div>

                    <div class="row mb-2">
                        <label for="inputSymbol" class="col-sm-3 col-form-label">Symbol</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputEditSymbol">
                        </div>
                    </div>

                    <div class="row mb-2">
                        <label for="inputContractAddress" class="col-sm-3 col-form-label">Contract Address</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputEditContractAddress">
                        </div>
                    </div>

                    <div class="row mb-2">
                        <label for="inputTotalSupply" class="col-sm-3 col-form-label">TotalSupply</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputEditTotalSupply">
                        </div>
                    </div>

                    <div class="row mb-2">
                        <label for="inputTotalHolders" class="col-sm-3 col-form-label">Total Holders</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputEditTotalHolders">
                        </div>
                    </div>
                    
                    <div class="row mb-2" id="editPriceRow">
                        <label for="inputTotalHolders" class="col-sm-3 col-form-label">Price</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" id="inputEditPrice">
                        </div>
                    </div>
                    
                    <input type="hidden" id="inputEditId">
      
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary modalCloseBtn" data-dismiss="modal">Close</button>
                <button id="formEditSubmit" type="button" onclick="submitEditForm()" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>

    let chart = null;

    $("#tokenForm").submit(function (e) {
        // prevent submit
        e.preventDefault();

        // validate 


        // ...

        let data = {
            "symbol": $("#inputSymbol").val(),
            "name": $("#inputName").val(),
            "totalSupply": $("#inputTotalSupply").val(),
            "contractAddress": $("#inputContractAddress").val(),
            "totalHolders": $("#inputTotalHolders").val(),
        }

        $.ajax({
            type: "POST",
            url: "http://localhost:5262/Token",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            success: function () {
                resetTokenForm();
                getTokenList(1);
                alert("Details saved successfully!!!");
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });
    });

    $("#btnResetTokenForm").click(function () {
        resetTokenForm();
    });

    $( document ).ready(function() {
        getTokenList(1);

        // Close modal on button click
        $(".modalCloseBtn").click(function () {
            $("#editModal").modal('hide');
        });
    });

    function getTokenList(pageNo)
    {
        $.ajax({
            type: "Get",
            url: "http://localhost:5262/Token/GetPaginateList?pageNo=" + pageNo,
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                console.log(response);


                $("#dataTbBody").empty();
                $("#chart-line").empty();
                let chartLabels = [];
                let chartDateSets = [];
                for (let i = 0; i < response.data.length; i++) {
                    var newRowContent = `<tr><th scope="row">` + ((i + 1) + (pageNo - 1) * 10) + "</th>" +
                        `<td><a href="#" onclick="displayDetail(${response.data[i].id});return false;">${response.data[i].symbol}</a></td>` +
                        "<td>" + response.data[i].name + "</td>" +
                        "<td>" + response.data[i].contractAddress + "</td>" +
                        "<td>" + response.data[i].totalHolders + "</td>" +
                        "<td>" + response.data[i].totalSupply + "</td>" +
                        "<td>" + response.data[i].totalSupplyPercentage + "</td>" +
                        `<td><button type="button" class="btn btn-secondary" onclick="editTBody(${response.data[i].id})">Edit</button></td>`;

                    $("#dataTbBody").append(newRowContent);

                    chartLabels.push(response.data[i].symbol);
                    chartDateSets.push(response.data[i].totalSupply);
                }

                $("#chartLocation").empty();
                $("#chartLocation").append(`<canvas id="chart-line" width="299" height="130" class="chartjs-render-monitor" style="display: block; width: 299px; height: 130px;"></canvas>`);
                var ctx = $("#chart-line");
                chart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: chartLabels,
                        datasets: [{
                            data: chartDateSets,
                            backgroundColor: ["" +
                                "rgba(255, 0, 0, 0.5)", 
                                "rgba(100, 255, 0, 0.5)", 
                                "rgba(110, 10, 255, 0.5)", 
                                "rgba(120, 20, 255, 0.5)", 
                                "rgba(130, 30, 255, 0.5)", 
                                "rgba(140, 40, 255, 0.5)", 
                                "rgba(150, 50, 255, 0.5)", 
                                "rgba(160, 60, 255, 0.5)", 
                                "rgba(170, 70, 255, 0.5)", 
                                response.data[9]?.symbol ? "rgba(0, 100, 255, 0.5)" : ""
                            ]
                        }]
                    }
                });

                $("#paginateId").empty();
                for (let i = 1; i <= response.totalPage; i++) {
                    let appendPaginate = '';
                    if (pageNo == i) {
                        appendPaginate = `<li class="page-item active"><span class="page-link">${i}</span></li>`;
                    } else {
                        appendPaginate = `<li class="page-item"><a class="page-link" href="#" onclick="getTokenList(${i})" >${i}</a></li>`;
                    }

                    $("#paginateId").append(appendPaginate);
                }

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });
    }

    function resetTokenForm() {
        return $('#tokenForm').trigger("reset");
    }

    function editTBody(id) {
        $('#editModal').modal('toggle');
        $.ajax({
            type: "Get",
            url: "http://localhost:5262/Token/GetTokenById?id=" + id,
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                console.log(response);
                $('#inputEditName').val(response.name);
                $('#inputEditSymbol').val(response.symbol);
                $('#inputEditContractAddress').val(response.contractAddress);
                $('#inputEditTotalSupply').val(response.totalSupply);
                $('#inputEditTotalHolders').val(response.totalHolders);
                $('#inputEditId').val(response.id);

                $("#inputEditName").prop('disabled', false);
                $("#inputEditSymbol").prop('disabled', false);
                $("#inputEditContractAddress").prop('disabled', false);
                $("#inputEditTotalSupply").prop('disabled', false);
                $("#inputEditTotalHolders").prop('disabled', false);
                $('#formEditSubmit').show();
                $('#editPriceRow').hide();
                $('#editModalLabel').text("Edit Token");
 
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });
        //http://localhost:5262/Token/GetTokenById?id=1
    }

    function displayDetail(id) {
        $('#editModal').modal('toggle');
        $.ajax({
            type: "Get",
            url: "http://localhost:5262/Token/GetTokenById?id=" + id,
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                console.log(response);
                $('#inputEditName').val(response.name);
                $('#inputEditSymbol').val(response.symbol);
                $('#inputEditContractAddress').val(response.contractAddress);
                $('#inputEditTotalSupply').val(response.totalSupply);
                $('#inputEditTotalHolders').val(response.totalHolders);
                $('#inputEditId').val(response.id);
                $('#inputEditPrice').val(response.price);

                $("#inputEditName").prop('disabled', true);
                $("#inputEditSymbol").prop('disabled', true);
                $("#inputEditContractAddress").prop('disabled', true);
                $("#inputEditTotalSupply").prop('disabled', true);
                $("#inputEditTotalHolders").prop('disabled', true);
                $("#inputEditPrice").prop('disabled', true);
                $('#formEditSubmit').hide();
                $('#editPriceRow').show();
                $('#editModalLabel').text("Detail Token");


            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });
    }

    function submitEditForm() {
        let data = {
            "id": $("#inputEditId").val(),
            "symbol": $("#inputEditSymbol").val(),
            "name": $("#inputEditName").val(),
            "totalSupply": $("#inputEditTotalSupply").val(),
            "contractAddress": $("#inputEditContractAddress").val(),
            "totalHolders": $("#inputEditTotalHolders").val()
        }

        $.ajax({
            type: "POST",
            url: "http://localhost:5262/Token/UpdateToken",
            data: JSON.stringify(data),
            contentType: "application/json; charset=utf-8",
            success: function () {
                resetTokenForm();
                getTokenList(1);
                $("#editModal").modal('hide');
                alert("Details saved successfully!!!");

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });
    }

    function exportData() {


        $.ajax({
            type: "GET",
            url: "http://localhost:5262/Token/Download",
            contentType: "application/json; charset=utf-8",
            success: function () {
                //resetTokenForm();
                //getTokenList(1);
                //$("#editModal").modal('hide');
                alert("Details saved successfully!!!");

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        });
    }
</script>
